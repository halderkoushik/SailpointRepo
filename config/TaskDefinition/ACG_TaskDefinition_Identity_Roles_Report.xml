<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition executor="sailpoint.reporting.LiveReportExecutor" name="Identity Roles Report" progressMode="Percentage" resultAction="Rename" subType="Role Management Reports" template="true" type="LiveReport">
  <Attributes>
    <Map>
      <entry key="report">
        <value>
          <LiveReport title="Identity Roles Report">
            <DataSource objectType="IdentityEntitlement" type="Filter">
              <Query>name=="assignedRoles" || name=="detectedRoles"</Query>
              <QueryParameters>
                <Parameter argument="identities" property="identity.id"/>
                <Parameter argument="lastRefresh" property="identity.lastRefresh" valueClass="daterange"/>
                <Parameter argument="lastLogin" property="identity.lastLogin" valueClass="daterange"/>
                <Parameter argument="identityApplications" property="identity.links.application.id"/>
                <Parameter argument="capabilities" property="identity.capabilities.id"/>
                <Parameter argument="identityRoles" property="value">
                  <ValueScript>
                    <Source><![CDATA[
                            import sailpoint.object.*;
                            import sailpoint.api.ObjectUtil;
                            if (value != null){
                              return ObjectUtil.convertIdsToNames(context, Bundle.class, value);
                            }
                            return null;
                          ]]></Source>
                  </ValueScript>
                </Parameter>
                <Parameter argument="groupDefinitions" property="identity">
                  <QueryScript>
                    <Source><![CDATA[
                            import sailpoint.object.*;
                            import sailpoint.reporting.*;
                            Filter f = ReportingLibrary.getGroupDefinitionFilter(context, value, true, property);
                            if(f!=null) {
                                queryOptions.addFilter(f);
                            }
                            return queryOptions;
                          ]]></Source>
                  </QueryScript>
                </Parameter>
              </QueryParameters>
            </DataSource>
            <ReportForm>
              <Reference class="sailpoint.object.Form" name="Base Identity Report Form"/>
            </ReportForm>
            <Columns>
              <ReportColumnConfig field="identity" header="rept_id_roles_col_identity" property="identity.displayName" sortable="true" width="110"/>
              <ReportColumnConfig field="role" header="rept_id_roles_col_role" property="value" sortable="true" width="110"/>
              <ReportColumnConfig field="detected" header="rept_id_roles_col_method" property="name" sortable="true" width="110">
                <RenderScript>
                  <Source><![CDATA[
                          import sailpoint.tools.*;
                          return value.equals("assignedRoles") ? Message.localize("rept_id_roles_col_assigned") : Message.localize("rept_id_roles_col_detected");
                        ]]></Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="lastCertification" header="rept_id_roles_last_cert" property="certificationItem.parent.certification.signed" sortable="true" width="110"/>
            </Columns>
            <InitializationRule>
              <Reference class="sailpoint.object.Rule" name="Identity Entitlement Identity Report Form Customizer"/>
            </InitializationRule>
          </LiveReport>
        </value>
      </entry>
    </Map>
  </Attributes>
  <Description>Displays the roles that each identity is a member of.</Description>
  <RequiredRights>
    <Reference class="sailpoint.object.SPRight" name="FullAccessIdentityRoleReport"/>
  </RequiredRights>
  <Signature>
    <Inputs>
      <Argument multi="true" name="groupDefinitions" type="string">
        <Description>rept_input_user_report_group_definition</Description>
      </Argument>
      <Argument name="capabilities" type="string">
        <Description>rept_input_user_report_capabilities</Description>
      </Argument>
      <Argument name="lastLoginType" type="string">
        <Description>rept_input_user_report_last_login_type</Description>
      </Argument>
      <Argument name="lastLogin" type="date">
        <Description>rept_input_user_report_last_login</Description>
      </Argument>
      <Argument name="lastRefreshType" type="string">
        <Description>rept_input_user_report_last_refresh_type</Description>
      </Argument>
      <Argument name="lastRefresh" type="date">
        <Description>rept_input_user_report_last_refresh</Description>
      </Argument>
      <Argument multi="true" name="identityRoles" type="Bundle">
        <Description>rept_input_user_report_biz_roles</Description>
      </Argument>
      <Argument multi="true" name="identityApplications" type="Application">
        <Description>rept_input_user_report_apps</Description>
      </Argument>
      <Argument filterString="managerStatus == true" multi="true" name="managers" type="Identity">
        <Description>rept_input_user_report_mgrs</Description>
      </Argument>
    </Inputs>
  </Signature>
</TaskDefinition>