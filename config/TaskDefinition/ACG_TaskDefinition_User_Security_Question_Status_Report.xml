<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition executor="sailpoint.reporting.LiveReportExecutor" name="User Security Question Status Report" progressMode="Percentage" resultAction="Rename" subType="Identity and User Reports" template="true" type="LiveReport">
  <Attributes>
    <Map>
      <entry key="report">
        <value>
          <LiveReport title="User Security Question Status Report">
            <DataSource objectType="Identity" type="Filter">
              <QueryParameters>
                <Parameter argument="identities" property="id"/>
                <Parameter argument="lastRefreshStart" operation="GT" property="lastRefresh"/>
                <Parameter argument="lastRefreshEnd" operation="LT" property="lastRefresh"/>
                <Parameter argument="lastLoginStart" operation="GT" property="lastLogin"/>
                <Parameter argument="lastLoginEnd" operation="LT" property="lastLogin"/>
                <Parameter argument="applications" property="links.application.id"/>
                <Parameter argument="capabilities" property="capabilities.id"/>
                <Parameter argument="businessRoles">
                  <QueryScript>
                    <Source><![CDATA[
                            import sailpoint.object.*;
                            import java.lang.*;
                            List roleFilters = new ArrayList();
                            if (value != null){
                              for(String role : value){
                                roleFilters.add(Filter.eq("bundles.id", role));
                                roleFilters.add(Filter.eq("assignedRoles.id", role));
                              }

                              if (!roleFilters.isEmpty())
                                queryOptions.addFilter(Filter.subquery("id", Identity.class, "id", Filter.or(roleFilters)));

                            }
                            return queryOptions;
                          ]]></Source>
                  </QueryScript>
                </Parameter>
                <Parameter argument="groupDefinitions">
                  <QueryScript>
                    <Source><![CDATA[
                            import sailpoint.object.*;
                            import sailpoint.reporting.*;
                            Filter f = ReportingLibrary.getGroupDefinitionFilter(context, value, false);
                            if(f!=null) {
                                queryOptions.addFilter(f);
                            }
                            return queryOptions;
                          ]]></Source>
                  </QueryScript>
                </Parameter>
              </QueryParameters>
            </DataSource>
            <ReportForm>
              <Reference class="sailpoint.object.Form" name="User Security Question Status Report Form"/>
            </ReportForm>
            <Columns>
              <ReportColumnConfig field="username" header="rept_users_auth_col_user" property="name" sortable="true" width="110"/>
              <ReportColumnConfig field="firstname" header="rept_users_auth_col_fame" property="firstname" sortable="true" width="110"/>
              <ReportColumnConfig field="lastname" header="rept_users_auth_col_lname" property="lastname" sortable="true" width="110"/>
              <ReportColumnConfig field="email" header="rept_users_auth_col_email" property="email" sortable="true" width="110"/>
              <ReportColumnConfig field="manager" header="rept_users_auth_col_manager" property="manager.displayName" sortable="true" width="110"/>
              <ReportColumnConfig field="lastLogin" header="rept_users_auth_col_last_login" property="lastLogin" sortable="true" width="110"/>
              <ReportColumnConfig field="questions" header="rept_users_auth_col_questions" property="id" width="110">
                <RenderScript>
                  <Source><![CDATA[
                          import sailpoint.object.*;

                          Integer required = renderCache.get("requiredAuthQuestions");
                          if (required == null){
                            required = context.getConfiguration().getInt( Configuration.NUM_AUTH_QUESTION_ANSWERS_REQUIRED );
                            renderCache.put("requiredAuthQuestions", required);
                          }

                          QueryOptions ops = new QueryOptions();
                          ops.addFilter(Filter.eq("identity.id", value));
                          ops.addFilter(Filter.notnull("question"));
                          return context.countObjects(AuthenticationAnswer.class, ops) + "/" + required;
                        ]]></Source>
                </RenderScript>
              </ReportColumnConfig>
            </Columns>
            <InitializationRule>
              <Reference class="sailpoint.object.Rule" name="Identity Report Form Customizer"/>
            </InitializationRule>
          </LiveReport>
        </value>
      </entry>
    </Map>
  </Attributes>
  <Description>Displays information about users with insufficient challenge questions.</Description>
  <RequiredRights>
    <Reference class="sailpoint.object.SPRight" name="FullAccessApplicationUserReport"/>
  </RequiredRights>
  <Signature>
    <Inputs>
      <Argument multi="true" name="groupDefinitions" type="string">
        <Description>rept_input_user_report_group_definition</Description>
      </Argument>
      <Argument name="capabilities" type="string">
        <Description>rept_input_user_report_capabilities</Description>
      </Argument>
      <Argument name="lastLoginStart" type="date">
        <Description>rept_input_user_report_last_login</Description>
      </Argument>
      <Argument name="lastLoginEnd" type="date">
        <Description>rept_input_user_report_last_login</Description>
      </Argument>
      <Argument name="lastRefreshStart" type="date">
        <Description>rept_input_user_report_last_refresh</Description>
      </Argument>
      <Argument name="lastRefreshEnd" type="date">
        <Description>rept_input_user_report_last_refresh</Description>
      </Argument>
      <Argument multi="true" name="businessRoles" type="Bundle">
        <Description>rept_input_user_report_biz_roles</Description>
      </Argument>
      <Argument multi="true" name="applications" type="Application">
        <Description>rept_input_user_report_apps</Description>
      </Argument>
      <Argument multi="true" name="managers" type="Identity">
        <Description>rept_input_user_report_mgrs</Description>
      </Argument>
    </Inputs>
  </Signature>
</TaskDefinition>