<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Workflow libraries="Identity" name="Identity Refresh" resultExpiration="-1" type="IdentityRefresh">
  <Variable input="true" name="identitizer" transient="true" type="object">
    <Description>
      Instance of sailpoint.object.Identitizer that launched this workflow.
      This is a transient object that will only be used if the
      workflow executes synchronously to completion when launched.
      It saves having finishRefresh allocate and initialize a new Identitizer.
    </Description>
  </Variable>
  <Variable input="true" name="identity" transient="true" type="object">
    <Description>
      Identity object we're refreshing.  This is a transient object
      that will only be used by finishRefresh if the workflow runs to 
      completion without suspending.
    </Description>
  </Variable>
  <Variable input="true" name="refreshOptions" type="object">
    <Description>
      Map of options to configure Identitizer when we're ready to 
      complete the refresh.  These were culled from the original set of
      options given to the Identitizer that launched this workflow.
    </Description>
  </Variable>
  <Variable input="true" name="identityName" type="string">
    <Description>
      The name of the identity object being refreshed.  The first half
      of the refresh will have been committed, this includes link refresh,
      attribute promotion, and role detction.
    </Description>
  </Variable>
  <Variable input="true" name="project">
    <Description>
      A ProvisioningProject object describing the modifications to the identity.
      This may include a list of Question objects which will 
      cause the generation of a Form and a WorkItem to solicit
      additional information necessary for provisioning.
    </Description>
  </Variable>
  <Variable input="true" name="changeEvents">
    <Description>
      A list of IdentityChangeEvent objects generated by pre-provisioning
      triggers.
    </Description>
  </Variable>
  <Variable input="true" name="detectionDifference">
    <Description>
      A sailpoint.object.Difference object with changes made to the
      detected role list during the first half of the refresh.  These
      will already have been committed to the database.  In theory this
      could be used to trigger approvals or notifications though we 
      don't really support the notion of "rejecting" a detection.
    </Description>
  </Variable>
  <Variable input="true" name="previousVersion" type="object">
    <Description>
      A copy of the Identity object made before the refresh.
      This is needed in the second phase of refresh for trigger processing.
    </Description>
  </Variable>
  <Variable editable="true" initializer="false" input="true" name="doManualActions">
    <Description>
      When set to 'true' the unmanged plan from the provisioning project
      will be converted into one or more manual action work items to request
      the changes since they can't be done automatically.
      This may be passed in from the refresh task arguments.
    </Description>
  </Variable>
  <Variable input="true" name="enableManualAccountSelection">
    <Description>
      When set to 'true' the system will send out Account Selection Notification emails 
      for users with more than one account on any one application and the system 
      can't determine the provisioning account.
      This may be passed in from the refresh task arguments.
    </Description>
  </Variable>
  <Step icon="Start" name="start" posX="28" posY="10">
    <Transition to="Evaluate Change Events"/>
  </Step>
  <Step condition="changeEvents != null" name="Evaluate Change Events" posX="161" posY="10">
    <Transition to="Do Provisioning Forms"/>
  </Step>
  <Step condition="project != null &amp;&amp; (project.hasQuestions() || (isTrue(enableManualAccountSelection) &amp;&amp; (project.hasUnansweredAccountSelections() ||  project.hasUnansweredProvisioningTargets())))" name="Do Provisioning Forms" posX="346" posY="10">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="project" value="ref:project"/>
    <Arg name="fallbackOwner" value="spadmin"/>
    <Arg name="accountSelectionOwner" value="applicationOwner"/>
    <Arg name="formTemplate" value="Identity Refresh"/>
    <Arg name="disableManualAccountSelection" value="script:!isTrue(enableManualAccountSelection)"/>
    <Description>
      Call the standard subprocess for assembling, presenting, and assimilating
      provisioning forms.
    </Description>
    <Return name="project" to="project"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="Do Provisioning Forms"/>
    </WorkflowRef>
    <Transition to="Finish Refresh"/>
  </Step>
  <Step action="finishRefresh" name="Finish Refresh" posX="515" posY="10">
    <Arg name="identitizer" value="ref:identitizer"/>
    <Arg name="identity" value="ref:identity"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="refreshOptions" value="ref:refreshOptions"/>
    <Arg name="previousVersion" value="ref:previousVersion"/>
    <Arg name="project" value="ref:project"/>
    <Description>
      Provision what is left in the project then finish the refresh
      by running policy checks, recalculating scores, and other things.
    </Description>
    <Transition to="Save Identity"/>
  </Step>
  <Step condition="isTrue(doManualActions) &amp;&amp; project.getUnmanagedPlan() != null" name="Manual Actions" posX="696" posY="10">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="project" value="ref:project"/>
    <Description>
      Present work items for the parts of the project that could not be sent
      to an integrated IDM system.
    </Description>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="Do Manual Actions"/>
    </WorkflowRef>
    <Transition to="end"/>
  </Step>
  <Step action="script: if (identity != null ) { context.saveObject(identity); context.commitTransaction(); }" condition="isTrue(doManualActions) &amp;&amp; project.getUnmanagedPlan() != null" name="Save Identity" posX="587" posY="150">
    <Arg name="identity" value="ref:identity"/>
    <Description>
      Present work items for the parts of the project that could not be sent
      to an integrated IDM system.
    </Description>
    <Transition to="Manual Actions"/>
  </Step>
  <Step name="end" posX="859" posY="10"/>
</Workflow>