<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Rule-AttributeSync-RuleLibrary">
  <Source><![CDATA[
	
	import java.util.List;
	import java.util.Map;
	import java.util.Set;
	import java.util.ArrayList;
	import java.util.HashMap;
	import org.apache.commons.logging.Log;
	import org.apache.commons.logging.LogFactory;
	import sailpoint.api.IdentityService;
	import sailpoint.api.SailPointContext;
	import sailpoint.object.Application;
	import sailpoint.object.Custom;
	import sailpoint.object.Identity;
	import sailpoint.object.Link;
	import sailpoint.object.ProvisioningPlan;
	import sailpoint.object.ProvisioningProject;
	import sailpoint.object.ProvisioningPlan.AccountRequest;
	import sailpoint.object.ProvisioningPlan.AttributeRequest;
	import sailpoint.object.Attributes;
	import sailpoint.object.Workflow;
	import sailpoint.tools.GeneralException;
	import sailpoint.tools.Util;
	import sailpoint.rapidapponboarding.rule.AttributeSyncRuleLibrary;
	import sailpoint.rapidapponboarding.rule.WrapperRuleLibrary;
	import sailpoint.rapidapponboarding.rule.ROADUtil;
	import sailpoint.rapidapponboarding.logger.LogEnablement;
	import sailpoint.object.Template;
	import sailpoint.object.Field;
	import sailpoint.object.Rule;
	Log attrSyncLogger = LogFactory.getLog("rapidapponboarding.rules");
	/**
     * Return Attribute Sync Request Type
     * @param context
     * @param workflow
     * @return
     */
	public String getRequestTypeName(SailPointContext context, Workflow workflow){
		String requestType = AttributeSyncRuleLibrary.ATTRIBUTESYNCFEATURE;
		return requestType;
	}
	 /**
	 * Execute Post Attribute Sync Rule
	 * @param identityName
	 * @param project
	 * @param requestType
	 */
    public void postAttributeSyncRule(String identityName, String requestType, ProvisioningProject project)
    {
    	LogEnablement.isLogDebugEnabled(attrSyncLogger,"Start  postAttributeSyncRule" );
    	LogEnablement.isLogDebugEnabled(attrSyncLogger,"..identityName..."+identityName );
    	LogEnablement.isLogDebugEnabled(attrSyncLogger,"..requestType..."+requestType );
    	LogEnablement.isLogDebugEnabled(attrSyncLogger,"..project..."+project );
    	Map map = new HashMap();
	    //Common Configuration
        map = ROADUtil.getCustomGlobalMap(context);
        if(map!=null && map.containsKey("postAttributeSyncRule"))
		{
		    String ruleName=map.get("postAttributeSyncRule");
		    if(ruleName!=null && ruleName.length()>0)
		    {
		    ROADUtil.invokePostExtendedRuleNoObjectReferences(context,null,ruleName, null,  requestType, null, null, null, identityName,null, project);
		    }
		 }
	 	LogEnablement.isLogDebugEnabled(attrSyncLogger,"End  postAttributeSyncRule" );
    }
		
	]]></Source>
</Rule>