<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Rule-IdentityTrigger-Leaver-LTD" type="IdentityTrigger">
  <Description>
  	  This rule will be invoked when the IdentityEvent is fired from the Refresh.
  </Description>
  <Signature returnType="boolean">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="previousIdentity">
        <Description>
          The identity before the refresh/aggregation (this will be null when an
          identity is created).
        </Description>
      </Argument>
      <Argument name="newIdentity">
        <Description>
          The identity after the refresh/aggregation (this will be null when an
          identity is deleted).
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="result">
        <Description>
          A boolean describing the result of the rule.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[

   import sailpoint.rapidapponboarding.rule.LeaverRuleLibrary;
  	// THIS  IS THE ENTRY POINT METHOD THAT IDENTITY TRIGGER CALLS WHEN INVOKED BY THE IDENTITY REFRESH
  	return LeaverRuleLibrary.isEligibleForLTD(context, previousIdentity, newIdentity);

  ]]></Source>
</Rule>